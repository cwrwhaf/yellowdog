services:
  kafka:
    image: apache/kafka:3.7.0
    # hostname: yellowdog
    container_name: kafka
    ports:
      - '9092:9092'
    # environment:
    #   KAFKA_PROCESS_ROLES: broker,controller
    #   KAFKA_BROKER_ID: 1
    #   KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
    #   KAFKA_LISTENERS: CONTROLLER://:19092,EXTERNAL://:9093
    #   KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9093
    #   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
    #   KAFKA_INTER_BROKER_LISTENER_NAME: EXTERNAL

    #      echo "listeners=CONTROLLER://:19092,EXTERNAL://:9093" >> $properties_file;
    # echo "advertised.listeners=EXTERNAL://localhost:9093" >> $properties_file;
    # echo "inter.broker.listener.name=EXTERNAL" >> $properties_file;
    # echo "listener.security.protocol.map=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT" >> $properties_file;

    #  KAFKA_PROCESS_ROLES: broker,controller
    #  KAFKA_NODE_ID: 1
    #  KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093

    #  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
    #  KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092
    #  KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
    #  KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    #  KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
    #  KAFKA_BOOTSTRAP_SERVERS: localhost:9092

    # command: ./opt/kafka/bin/kafka-topics.sh --bootstrap-server 0.0.0.0:9092 --create --if-not-exists --topic general-task-topic --replication-factor 1 --partitions 1
# try working with networks?
    # KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
    # KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
    # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
    # KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    
    # KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://:9093
    # KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    # KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER




  #   healthcheck:
  #     test: nc -z kafka 9092


  # init-topics:
  #   image: apache/kafka:3.7.0
  #   depends_on:
  #     kafka:
  #        condition: service_healthy 
  #   command: ./opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka --create --if-not-exists --topic my-topic-1 --replication-factor 1 --partitions 1

  # init-topics:
  #   image: apache/kafka:3.7.0
  #   depends_on:
  #     - kafka
  #   entrypoint: [ '/bin/sh', '-c' ]
  #   command: |
  #     "
  #     echo -e 'Creating kafka topics'
  #     ./opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --if-not-exists --topic trades --replication-factor 1 --partitions 1

  #     echo -e 'Successfully created the following topics:'
  #     ./opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list
  #     "